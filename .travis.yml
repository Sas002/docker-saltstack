sudo: required
language: python
services:
- docker
env:
- distro=alpine
- distro=ubuntu
stages:
- test
- name: deploy
  if: branch = develop

before_install:
- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
- sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
  $(lsb_release -cs) stable"
- sudo apt-get update
- sudo apt-get -y install --only-upgrade openssl curl
- sudo apt-get -y install docker-ce
- sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname
  -s`-`uname -m` -o /usr/local/bin/docker-compose
- sudo chmod +x /usr/local/bin/docker-compose
- docker version
- docker-compose version
script:
- docker-compose -f ${distro}/docker-compose.yaml config
- docker-compose -f ${distro}/docker-compose.yaml up -d --build
- docker-compose -f ${distro}/docker-compose.yaml ps
- sleep 3
- docker-compose -f ${distro}/docker-compose.yaml exec saltmaster sh -c \ 'salt-call
  --master=$(hostname) test.ping || salt-key --accept=$(hostname) --yes'
- docker-compose -f ${distro}/docker-compose.yaml exec saltmaster sh -c \ 'salt-call
  --master=$(hostname) test.ping'
- docker-compose -f ${distro}/docker-compose.yaml exec saltmaster sh -c \ '[ $(salt-call
  --master=$(hostname) grains.get --output=newline_values_only nodename) = $(hostname)
  ]'
- curl -vk https://localhost:8000
after_failure:
- docker-compose -f ${distro}/docker-compose.yaml logs

jobs:
  include:
    - stage: deploy
      env:
      - distro=all
      before_install: ''
      script:
      - .travis/deploy.sh
      after_failure: ''

branches:
  except:
  - master
  - X-archive
notifications:
  slack:
    rooms:
      secure: OC8BIRtvReJ4AWXg1Hc6lLulTk+N4V1BUD9u7P0J21Z47DSN9mEi7Or0qZtKZIGuTiTv8K9IAmi0AF2xoztU3myJSdwre2tZFzXhtIZwGIIOryQTrhdbE9Rg3l0UVOTZ6gDLtBI2ttZ6ZadI0GkVPO69csH4usMiKLufCKd34XZDzClrsNJjKWsQc1Y3fGOyRLy/NhDWTfPYHB033El73JQogaGhLg5UhLoz0/laFAUI9FadNFtY5rsWqoEVzFWZSNmPH//j4+WoeunyPJNNRNhQORBO2iDd8fkxTuZxyQPX6H6o9BVeaJvnHtpu5+tzTetPh0V3D+JDbGwdzx/rvWGbDB9n/3ebgzUZdbYTZ6x1YSxiIpPjAgTYBrxZWAx8imw5bjlPbdwTzDsryHKcmOyG8ISaUHTiaiVYHcDqvo7fSYqCDAOAYL3KmhECMZDcCFDpyIfK7hiitB4Ki5qZ4mjuEn6bytQsmv2zE2OYK9kjKAEn5DChqISyXOYRuCeESOc2+7Y2Bq2zsd5C/Q1w1WDAGWIKideF5/+z1ye1Pub7MblV1nSGmg05knnXsnqNUShk1v1dvgcvTVpB6aEhJY1HZmXixeb9v0RB14q1t6V3pa7hJlUTotwjIc8U0UG1q8JVMGV+0idkksP+ax5a9QzMEnXUv451sXeczPveQa8=
  on_success: always
  on_failure: always

